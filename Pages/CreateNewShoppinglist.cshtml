@page
@model ListLife.Pages.CreateNewShoppingList
@{
}

<h1>Create New Shoppinglist</h1>

<section class="shopping-container">
    <!-- Vänstra sektionen: Input -->
    <section class="shopping-form">
        <form method="post">
            <fieldset>
                <legend>Shopping List Details</legend>

                <div>
                    <label asp-for="ShoppingList.Title">Shoppinglist Name:</label>
                    <input asp-for="ShoppingList.Title" id="listTitleInput" class="form-control" placeholder="Enter Listname" required />
                </div>

                <div>

                    <label>Category:</label>
                    <select name="ShoppingList.Category" id="category" class="form-control" required>
                        <option value="">--Select Category--</option>
                        <option value="FruitsVegetables">Fruits & Vegetables</option>
                        <option value="Fridge">Fridge items</option>
                        <option value="Freezer">Freezer items</option>
                        <option value="Pantry">Pantry items</option>
                        <option value="Hygiene">Hygiene items</option>
                        <option value="Other">Other</option>
                        <option value="Amount">Amount</option>
                    </select>
                </div>

                <div>
                    <label asp-for="Product.Name">Product Name:</label>
                    <input asp-for="Product.Name" id="product" class="form-control" placeholder="Enter product name" required />
                </div>

                <div>
                    <label asp-for="Product.Amount">Amount:</label>
                    <select id="amount" class="form-control" required></select>
                </div>
            </fieldset>

            <nav class="button-group">
                <button type="button" id="addToList" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Add to List
                </button>

                <button type="submit" class="btn btn-success">
                    <i class="bi bi-save"></i> Create Shopping List
                </button>

                <button type="button" class="btn btn-danger" onclick="window.location.href='/MyPage'">
                    <i class="bi bi-x-circle"></i> Cancel
                </button>
            </nav>
        </form>
    </section>

    <!-- Högra sektionen: Realtidslista -->
    <section class="shopping-list">
        <h2>Your Shopping List:<span id="listTitleDisplay"></span></h2>
        <ul id="shoppingList"></ul>
    </section>
</section>

<script>
    let shoppingList = [];

    // Uppdaterar mängd beroende på kategori
    document.getElementById("category").addEventListener("change", function () {
        let category = this.value;
        let amountSelect = document.getElementById("amount");
        amountSelect.innerHTML = "";

        if (category === "FruitsVegetables") {
            ["0.5 kg", "1 kg", "1.5 kg", "2 kg"].forEach(value => {
                let option = new Option(value, value);
                amountSelect.appendChild(option);
            });
        } else {
            for (let i = 1; i <= 10; i++) {
                let option = new Option(i, i);
                amountSelect.appendChild(option);
            }
        }
    });

    document.getElementById("addToList").addEventListener("click", function () {
        let category = document.getElementById("category").value;
        let product = document.getElementById("product").value;
        let amount = document.getElementById("amount").value;
        let listTitle = document.getElementById("listTitleInput").value.trim();

        if (!category || !product || !amount) {
            alert("Please fill all fields!");
            return;
        }

        // Sätt listans namn i realtidsrutan 
        if (shoppingList.length === 0 && listTitle !== "") {
            document.getElementById("listTitleDisplay").textContent = " " + listTitle;
        }

        let newItem = { category, product, amount };
        shoppingList.push(newItem);

        updateShoppingListUI();
    });

    function updateShoppingListUI() {
        let shoppingListEl = document.getElementById("shoppingList");
        shoppingListEl.innerHTML = "";

        shoppingList.forEach((item, index) => {
            let li = document.createElement("li");
            li.classList.add("shopping-list-item");
            li.innerHTML = `
                <div class="list-item">
                    <span class="item-text"><strong>${item.category}:</strong> ${item.product} (${item.amount})</span>
                    <button class="btn btn-sm btn-danger remove-item" data-index="${index}">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>`;
            shoppingListEl.appendChild(li);
        });

        document.querySelectorAll(".remove-item").forEach(button => {
            button.addEventListener("click", function () {
                let index = this.getAttribute("data-index");
                shoppingList.splice(index, 1);
                updateShoppingListUI();
            });
        });
    }
</script>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #2c2c2c;
        color: white;
    }

    .shopping-container {
        display: flex;
        justify-content: space-between;
        max-width: 900px;
        margin: auto;
    }

    .shopping-form {
        width: 58%;
    }

    .shopping-list {
        background-color: pink;
        padding: 15px;
        border-radius: 8px;
        width: 40%;
        color: black;
        font-size: 14px;
        overflow-y: auto;
        max-height: 280px;
        word-wrap: break-word;
    }

    .button-group {
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
    }

    .shopping-list-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 5px;
        border-bottom: 1px solid #ccc;
    }

    .list-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: 5px;
    }

    .item-text {
        font-size: 14px;
        flex-grow: 1;
        word-wrap: break-word;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .remove-item {
        background-color: red;
        color: white;
        border: none;
        padding: 5px;
        border-radius: 5px;
        cursor: pointer;
    }
</style>
